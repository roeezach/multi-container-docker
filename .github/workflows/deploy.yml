name: Build and Deploy Multi-Container App

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Python 3.9
        run: |
          sudo apt-get update
          sudo apt-get install python3.9
        shell: bash

      - name: Install pip
        run: |
          sudo apt-get install python3-pip
        shell: bash

      - name: Install EB CLI
        run: |
          pip3 install --upgrade pip
          pip3 install awsebcli
        shell: bash
        env:
          PATH: ${{ runner.workspace }}/.local/bin:$PATH

      - name: Build and test client react app
        run: |
          docker build -t roeezach/react-test -f ./client/Dockerfile.dev ./client
          docker run -e CI=true roeezach/react-test npm test
        working-directory: ${{ github.workspace }}

      - name: Build and tag Docker images
        run: |
          docker build -t roeezach/multi-client ./client
          docker build -t roeezach/multi-nginx  ./nginx
          docker build -t roeezach/multi-worker ./worker
          docker build -t roeezach/multi-server ./server
        working-directory: ${{ github.workspace }}

      - name: Login to Docker hub
        run: echo -n '${{ secrets.DOCKER_PASSWORD }}'| docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Push Docker images to Docker Hub
        run: |
          docker push roeezach/multi-client
          docker push roeezach/multi-nginx
          docker push roeezach/multi-server
          docker push roeezach/multi-worker
        working-directory: ${{ github.workspace }}

      - name: Deploy to Elastic Beanstalk
        run: |
          aws configure set region eu-north-1
          aws configure set aws_access_key ${{ secrets.AWS_ACCESS_KEY }}
          aws configure set aws_secret_key ${{ secrets.AWS_SECRET_KEY }}
          eb deploy --debug
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
